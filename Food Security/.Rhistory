119150 - 18000*6
18000*6
hh <- read.csv('D://Documents and Settings/mcooper/GitHub/vs-indicators-calc/Combine/hh_level.csv')
head(hh)
hh$hh_annual_nonfuel_nr_value
lc2 <- read.csv('D://Documents and Settings/mcooper/GitHub/vitalsigns-analysis/Food Security/forest_hh.csv')
lc2 <- read.csv('D://Documents and Settings/mcooper/GitHub/vitalsigns-analysis/Food Security/hh_forest.csv')
lc1 <- read.csv('D://Documents and Settings/mcooper/GitHub/vitalsigns-analysis/Food Security/Landcover_hh.csv')
names(lc1)
names(cl2)
names(lc2)
names(hh)
names(hh)[names(hh)=='Household_ID'] <- 'Household.ID'
m <- merge(hh, lc1)
m$layer
View(m[ , c('layer', )])
names(m
)
View(m[ , c('layer', 'hh_annual_nonfuel_nr_value')])
m <- merge(hh, lc1, by=c('Household.ID', 'Round'))
m <- m[m$Round == '1', ]
dim(m)
plot(hh_annual_nonfuel_nr_value~layer, data=m)
m <- merge(hh, lc1, by=c('Household.ID', 'Round'), all=F)
m <- merge(hh, lc1, by=c('Household.ID', 'Round'))
hh <- hh[hh$Round == '1', ]
lc1 <- lc1[lc1$Round == '1', ]
hh$Round
m <- merge(hh, lc1, by=c('Household.ID'))
m$Household.ID
lc1$Household.ID
hh$Household.ID
hh <- read.csv('D://Documents and Settings/mcooper/GitHub/vs-indicators-calc/NaturalResources/NaturalResources.HH.csv')
hh <- hh[hh$Round == '1', ]
lc1 <- lc1[lc1$Round == '1', ]
m <- merge(hh, lc1, by=c('Household.ID'))
plot(hh_annual_nonfuel_nr_value~layer, data=m)
plot(hh_annual_nonfuel_nr_value~layer, data=m[m$hh_annual_nonfuel_nr_value > 0, ])
hh$hh_annual_nonfuel_nr_value
hh$hh_annual_nonfuel_nr_value[hh$Country=='GHA']
rateadjust <- c("hh_annual_nonfuel_nr_value")
hv[ , rateadjust] <- hv[ , rateadjust]/hv$Rate
m[ , rateadjust] <- m[ , rateadjust]/hv$Rate
m[ , rateadjust] <- m[ , rateadjust]/m$Rate
plot(hh_annual_nonfuel_nr_value~layer, data=m[m$hh_annual_nonfuel_nr_value > 0, ])
hh$hh_annual_nonfuel_nr_value
hh$layer
m$layer
m <- merge(hh, lc1, by=c('Household.ID'))
m <- merge(m, data.frame(Country = c('GHA', 'RWA', 'UGA', 'TZA'),
Rate    = c(4.348, 838.8, 3595, 2236)), all.x=T)
rateadjust <- c("hh_annual_nonfuel_nr_value")
m$hh_annual_nonfuel_nr_value <- m$hh_annual_nonfuel_nr_value/m$Rate
plot(hh_annual_nonfuel_nr_value~layer, data=m[m$hh_annual_nonfuel_nr_value > 0, ])
summary(lm(hh_annual_nonfuel_nr_value~layer, data=m[m$hh_annual_nonfuel_nr_value > 0, ]))
summary(lm(hh_annual_nonfuel_nr_value~layer, data=m))
setwd('D://Documents and Settings/mcooper/GitHub/vitalsigns-analysis/Food Security/')
library(lubridate)
library(dplyr)
source('../local_connection.R')
con <- src_postgres(dbname = dbname, host = host, port = port, user = user, password = password)
library(aws.s3)
aws.signature::use_credentials()
read <- function(x){
read.csv(text=rawToChar(get_object(x, bucket='vs-cdb-indicators')))
}
fs <- tbl(con, 'flagging__household_secI') %>% data.frame
fs <- tbl(vs_db, 'flagging__household_secI') %>% data.frame
fs$shortage_year <- fs$hh_i08=="1"
# 2  Rely on less preferred foods?
# 2  Limit the variety of foods eaten?
# 5  Limit portion size at meal-times?
# 5  Reduce number of meals eaten in a day?
# 7  Restrict consumption by adults for small children to eat?
# 7  Borrow food, or rely on help from a friend or relative?
# 10  Have no food of any kind in your house-hold?
# 10  Go a whole day and night without eating anything?
fs$CSI <-  rowSums(data.frame(fs$hh_i02_1 * 2, fs$hh_i02_2 * 2,
fs$hh_i02_3 * 5, fs$hh_i02_4 * 5,
fs$hh_i02_5 * 7, fs$hh_i02_6 * 7,
fs$hh_i02_7 * 10, fs$hh_i02_8 * 10), na.rm=T)
fs$CSI
fs$Household.ID
fs$months_insecurity <- rowSums(fs[ , c(paste0('hh_i09_2012_', seq(1,12)), paste0('hh_i09_2012_', seq(1,12)))], na.rm=T)
vs_db <- con
# hh_i031
# How many meals, including breakfast are taken per day in your household? (Adults: over 5 Years Old)
#
# hh_i08
# In the last 12 months, have you been faced with a situation when you did not have enough food to feed the household?
fs <- tbl(vs_db, 'flagging__household_secI') %>% data.frame
fs$shortage_year <- fs$hh_i08=="1"
# 2  Rely on less preferred foods?
# 2  Limit the variety of foods eaten?
# 5  Limit portion size at meal-times?
# 5  Reduce number of meals eaten in a day?
# 7  Restrict consumption by adults for small children to eat?
# 7  Borrow food, or rely on help from a friend or relative?
# 10  Have no food of any kind in your house-hold?
# 10  Go a whole day and night without eating anything?
fs$CSI <-  rowSums(data.frame(fs$hh_i02_1 * 2, fs$hh_i02_2 * 2,
fs$hh_i02_3 * 5, fs$hh_i02_4 * 5,
fs$hh_i02_5 * 7, fs$hh_i02_6 * 7,
fs$hh_i02_7 * 10, fs$hh_i02_8 * 10), na.rm=T)
fs$months_insecurity <- rowSums(fs[ , c(paste0('hh_i09_2012_', seq(1,12)), paste0('hh_i09_2012_', seq(1,12)))], na.rm=T)
fs$hfias <- rowSums(fs[ , c('hh_i02_1', 'hh_i02_2', 'hh_i02_3', 'hh_i02_4', 'hh_i02_5', 'hh_i02_6', 'hh_i02_7', 'hh_i02_8')])
fs <- fs %>% select(Country, Landscape.., Household.ID, Round, shortage_year, CSI, months_insecurity, number_meals=hh_i031, hfias)
diet <- tbl(vs_db, 'flagging__household_secK2') %>% data.frame
f_groups <- c("k2_8_a", "k2_8_b", "k2_8_c", "k2_8_d", "k2_8_e",
"k2_8_f","k2_8_g",  "k2_8_h", "k2_8_i", "k2_8_j")
diet$diversity <- rowSums(diet[f_groups] / 7, na.rm=T) / length(f_groups)
diet <- diet %>% select(Country, Landscape.., Household.ID, Round, diversity)
##Nonfood spending
##Do we need Sec L?
nonfood_spending <- tbl(vs_db, "flagging__household_secL") %>% data.frame
nonfood_spending_b <- tbl(vs_db, "flagging__household_secM") %>% data.frame
# keep the first 4 columns, while subsequently dropping every other column
df <- nonfood_spending[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending)[grepl('_2$', names(nonfood_spending))])]
# melt to long shape
df <- melt(df,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
#list of items measured weekly.  All other items measured monthly
weekly <- c('l_101_2', 'l_102_2', 'l_103_2', 'l_199_2', 'l_204_2', 'l_206_2', 'l_207_2', 'l_207_2a')
df[df$nonfood.code %in% weekly,'amount.spent'] <- df[df$nonfood.code %in% weekly,'amount.spent']/7*365.24
df[!df$nonfood.code %in% weekly,'amount.spent'] <- df[!df$nonfood.code %in% weekly,'amount.spent']/31*365.24
nfs <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.a=sum(amount.spent, na.rm=T))
df2 <- nonfood_spending_b[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending_b)[grepl('_2$', names(nonfood_spending_b))])]
df2 <- melt(df2,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
nfs2 <- df2 %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.b=sum(amount.spent, na.rm=T))
nfs3 <- merge(nfs, nfs2)
nfs3$Nonfood.Spending <- nfs3$total.spent.a + nfs3$total.spent.b
nfs3 <- nfs3 %>% select(Country, Landscape.., Household.ID, Round, Nonfood.Spending)
##Food Spending
df <- tbl(vs_db, "flagging__household_secK1") %>% data.frame #FS 6
food <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarise(Food.Consumption.Value = sum(k_04 + k_05a, na.rm = TRUE)*52.14, Food.Spending = sum(k_04, na.rm=T)*52.14)
#Combine and aggregate
out <- Reduce(function(x, y){merge(x, y, all=T)}, list(fs, diet, nfs3, food))
out$Food_As_Percent_Total_Spending <- (out$Food.Spending/(out$Food.Spending + out$Nonfood.Spending))*100
out <- merge(out, data.frame(Country = c('GHA', 'RWA', 'UGA', 'TZA'),
Rate    = c(4.348, 838.8, 3595, 2236)), all.x=T)
rateadjust <- c('Nonfood.Spending', 'Food.Spending', 'Food.Consumption.Value')
out[ , rateadjust] <- out[ , rateadjust]/out$Rate
out_ls <- out %>% group_by(Country, Landscape..) %>%
summarize(avg_meals = mean(number_meals, na.rm=T),
Percent_Shortage_Past_Year = mean(shortage_year, na.rm=T)*100,
Mean_Months_Insecurity = mean(months_insecurity, na.rm=T),
Mean_CSI = mean(CSI, na.rm=T),
Mean_Diet_Diversity = mean(diversity, na.rm=T),
Mean_Nonfood_Spending = mean(Nonfood.Spending, na.rm=T),
Mean_Food_Consumption_Value = mean(Food.Consumption.Value, na.rm=T),
Mean_Food_Spending = mean(Food.Spending, na.rm=T),
Food_As_Percent_Total_Spending = mean(Food_As_Percent_Total_Spending, na.rm=T))
#########################################
#Write
#################################
library(aws.s3)
aws.signature::use_credentials()
writeS3 <- function(df, name){
names(df) <- gsub('.', '_', names(df), fixed=T)
names(df)[names(df)=='Landscape__'] <- 'Landscape'
zz <- rawConnection(raw(0), "r+")
write.csv(df, zz, row.names=F)
aws.s3::put_object(file = rawConnectionValue(zz),
bucket = "vs-cdb-indicators", object = name)
close(zz)
}
writeS3(out, 'FoodSecurity_HH.csv')
writeS3(out_ls, 'FoodSecurity_Landscape.csv')
library(reshape2)
# hh_i031
# How many meals, including breakfast are taken per day in your household? (Adults: over 5 Years Old)
#
# hh_i08
# In the last 12 months, have you been faced with a situation when you did not have enough food to feed the household?
fs <- tbl(vs_db, 'flagging__household_secI') %>% data.frame
fs$shortage_year <- fs$hh_i08=="1"
# 2  Rely on less preferred foods?
# 2  Limit the variety of foods eaten?
# 5  Limit portion size at meal-times?
# 5  Reduce number of meals eaten in a day?
# 7  Restrict consumption by adults for small children to eat?
# 7  Borrow food, or rely on help from a friend or relative?
# 10  Have no food of any kind in your house-hold?
# 10  Go a whole day and night without eating anything?
fs$CSI <-  rowSums(data.frame(fs$hh_i02_1 * 2, fs$hh_i02_2 * 2,
fs$hh_i02_3 * 5, fs$hh_i02_4 * 5,
fs$hh_i02_5 * 7, fs$hh_i02_6 * 7,
fs$hh_i02_7 * 10, fs$hh_i02_8 * 10), na.rm=T)
fs$months_insecurity <- rowSums(fs[ , c(paste0('hh_i09_2012_', seq(1,12)), paste0('hh_i09_2012_', seq(1,12)))], na.rm=T)
fs$hfias <- rowSums(fs[ , c('hh_i02_1', 'hh_i02_2', 'hh_i02_3', 'hh_i02_4', 'hh_i02_5', 'hh_i02_6', 'hh_i02_7', 'hh_i02_8')])
fs <- fs %>% select(Country, Landscape.., Household.ID, Round, shortage_year, CSI, months_insecurity, number_meals=hh_i031, hfias)
diet <- tbl(vs_db, 'flagging__household_secK2') %>% data.frame
f_groups <- c("k2_8_a", "k2_8_b", "k2_8_c", "k2_8_d", "k2_8_e",
"k2_8_f","k2_8_g",  "k2_8_h", "k2_8_i", "k2_8_j")
diet$diversity <- rowSums(diet[f_groups] / 7, na.rm=T) / length(f_groups)
diet <- diet %>% select(Country, Landscape.., Household.ID, Round, diversity)
##Nonfood spending
##Do we need Sec L?
nonfood_spending <- tbl(vs_db, "flagging__household_secL") %>% data.frame
nonfood_spending_b <- tbl(vs_db, "flagging__household_secM") %>% data.frame
# keep the first 4 columns, while subsequently dropping every other column
df <- nonfood_spending[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending)[grepl('_2$', names(nonfood_spending))])]
# melt to long shape
df <- melt(df,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
#list of items measured weekly.  All other items measured monthly
weekly <- c('l_101_2', 'l_102_2', 'l_103_2', 'l_199_2', 'l_204_2', 'l_206_2', 'l_207_2', 'l_207_2a')
df[df$nonfood.code %in% weekly,'amount.spent'] <- df[df$nonfood.code %in% weekly,'amount.spent']/7*365.24
df[!df$nonfood.code %in% weekly,'amount.spent'] <- df[!df$nonfood.code %in% weekly,'amount.spent']/31*365.24
nfs <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.a=sum(amount.spent, na.rm=T))
df2 <- nonfood_spending_b[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending_b)[grepl('_2$', names(nonfood_spending_b))])]
df2 <- melt(df2,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
nfs2 <- df2 %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.b=sum(amount.spent, na.rm=T))
nfs3 <- merge(nfs, nfs2)
nfs3$Nonfood.Spending <- nfs3$total.spent.a + nfs3$total.spent.b
nfs3 <- nfs3 %>% select(Country, Landscape.., Household.ID, Round, Nonfood.Spending)
##Food Spending
df <- tbl(vs_db, "flagging__household_secK1") %>% data.frame #FS 6
food <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarise(Food.Consumption.Value = sum(k_04 + k_05a, na.rm = TRUE)*52.14, Food.Spending = sum(k_04, na.rm=T)*52.14)
#Combine and aggregate
out <- Reduce(function(x, y){merge(x, y, all=T)}, list(fs, diet, nfs3, food))
out$Food_As_Percent_Total_Spending <- (out$Food.Spending/(out$Food.Spending + out$Nonfood.Spending))*100
out <- merge(out, data.frame(Country = c('GHA', 'RWA', 'UGA', 'TZA'),
Rate    = c(4.348, 838.8, 3595, 2236)), all.x=T)
rateadjust <- c('Nonfood.Spending', 'Food.Spending', 'Food.Consumption.Value')
out[ , rateadjust] <- out[ , rateadjust]/out$Rate
out_ls <- out %>% group_by(Country, Landscape..) %>%
summarize(avg_meals = mean(number_meals, na.rm=T),
Percent_Shortage_Past_Year = mean(shortage_year, na.rm=T)*100,
Mean_Months_Insecurity = mean(months_insecurity, na.rm=T),
Mean_CSI = mean(CSI, na.rm=T),
Mean_Diet_Diversity = mean(diversity, na.rm=T),
Mean_Nonfood_Spending = mean(Nonfood.Spending, na.rm=T),
Mean_Food_Consumption_Value = mean(Food.Consumption.Value, na.rm=T),
Mean_Food_Spending = mean(Food.Spending, na.rm=T),
Food_As_Percent_Total_Spending = mean(Food_As_Percent_Total_Spending, na.rm=T))
#########################################
#Write
#################################
library(aws.s3)
aws.signature::use_credentials()
writeS3 <- function(df, name){
names(df) <- gsub('.', '_', names(df), fixed=T)
names(df)[names(df)=='Landscape__'] <- 'Landscape'
zz <- rawConnection(raw(0), "r+")
write.csv(df, zz, row.names=F)
aws.s3::put_object(file = rawConnectionValue(zz),
bucket = "vs-cdb-indicators", object = name)
close(zz)
}
writeS3(out, 'FoodSecurity_HH.csv')
writeS3(out_ls, 'FoodSecurity_Landscape.csv')
write.csv(out, 'D://Documents and Settings/mcooper/Desktop/FoodSecurity_HH.csv', row.names=F)
write.csv(out, 'D://Documents and Settings/mcooper/Desktop/FoodSecurity_HH.csv', row.names=F)
# hh_i031
# How many meals, including breakfast are taken per day in your household? (Adults: over 5 Years Old)
#
# hh_i08
# In the last 12 months, have you been faced with a situation when you did not have enough food to feed the household?
fs <- tbl(vs_db, 'flagging__household_secI') %>% data.frame
fs$shortage_year <- fs$hh_i08=="1"
# 2  Rely on less preferred foods?
# 2  Limit the variety of foods eaten?
# 5  Limit portion size at meal-times?
# 5  Reduce number of meals eaten in a day?
# 7  Restrict consumption by adults for small children to eat?
# 7  Borrow food, or rely on help from a friend or relative?
# 10  Have no food of any kind in your house-hold?
# 10  Go a whole day and night without eating anything?
fs$CSI <-  rowSums(data.frame(fs$hh_i02_1 * 2, fs$hh_i02_2 * 2,
fs$hh_i02_3 * 5, fs$hh_i02_4 * 5,
fs$hh_i02_5 * 7, fs$hh_i02_6 * 7,
fs$hh_i02_7 * 10, fs$hh_i02_8 * 10), na.rm=T)
fs$months_insecurity <- rowSums(fs[ , c(paste0('hh_i09_2012_', seq(1,12)), paste0('hh_i09_2012_', seq(1,12)))], na.rm=T)
fs$hfias <- rowSums(fs[ , c('hh_i02_1', 'hh_i02_2', 'hh_i02_3', 'hh_i02_4', 'hh_i02_5', 'hh_i02_6', 'hh_i02_7', 'hh_i02_8')], na.rm=T)
fs <- fs %>% select(Country, Landscape.., Household.ID, Round, shortage_year, CSI, months_insecurity, number_meals=hh_i031, hfias)
diet <- tbl(vs_db, 'flagging__household_secK2') %>% data.frame
f_groups <- c("k2_8_a", "k2_8_b", "k2_8_c", "k2_8_d", "k2_8_e",
"k2_8_f","k2_8_g",  "k2_8_h", "k2_8_i", "k2_8_j")
diet$diversity <- rowSums(diet[f_groups] / 7, na.rm=T) / length(f_groups)
diet <- diet %>% select(Country, Landscape.., Household.ID, Round, diversity)
##Nonfood spending
##Do we need Sec L?
nonfood_spending <- tbl(vs_db, "flagging__household_secL") %>% data.frame
nonfood_spending_b <- tbl(vs_db, "flagging__household_secM") %>% data.frame
# keep the first 4 columns, while subsequently dropping every other column
df <- nonfood_spending[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending)[grepl('_2$', names(nonfood_spending))])]
# melt to long shape
df <- melt(df,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
#list of items measured weekly.  All other items measured monthly
weekly <- c('l_101_2', 'l_102_2', 'l_103_2', 'l_199_2', 'l_204_2', 'l_206_2', 'l_207_2', 'l_207_2a')
df[df$nonfood.code %in% weekly,'amount.spent'] <- df[df$nonfood.code %in% weekly,'amount.spent']/7*365.24
df[!df$nonfood.code %in% weekly,'amount.spent'] <- df[!df$nonfood.code %in% weekly,'amount.spent']/31*365.24
nfs <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.a=sum(amount.spent, na.rm=T))
df2 <- nonfood_spending_b[ , c('Country', 'Landscape..', 'Household.ID', 'Round', names(nonfood_spending_b)[grepl('_2$', names(nonfood_spending_b))])]
df2 <- melt(df2,
id.vars = c("Country", "Landscape..", "Household.ID", "Round"),
variable.name = "nonfood.code",
value.name = "amount.spent")
nfs2 <- df2 %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarize(total.spent.b=sum(amount.spent, na.rm=T))
nfs3 <- merge(nfs, nfs2)
nfs3$Nonfood.Spending <- nfs3$total.spent.a + nfs3$total.spent.b
nfs3 <- nfs3 %>% select(Country, Landscape.., Household.ID, Round, Nonfood.Spending)
##Food Spending
df <- tbl(vs_db, "flagging__household_secK1") %>% data.frame #FS 6
food <- df %>% group_by(Country, Landscape.., Household.ID, Round) %>%
summarise(Food.Consumption.Value = sum(k_04 + k_05a, na.rm = TRUE)*52.14, Food.Spending = sum(k_04, na.rm=T)*52.14)
#Combine and aggregate
out <- Reduce(function(x, y){merge(x, y, all=T)}, list(fs, diet, nfs3, food))
out$Food_As_Percent_Total_Spending <- (out$Food.Spending/(out$Food.Spending + out$Nonfood.Spending))*100
out <- merge(out, data.frame(Country = c('GHA', 'RWA', 'UGA', 'TZA'),
Rate    = c(4.348, 838.8, 3595, 2236)), all.x=T)
rateadjust <- c('Nonfood.Spending', 'Food.Spending', 'Food.Consumption.Value')
out[ , rateadjust] <- out[ , rateadjust]/out$Rate
out_ls <- out %>% group_by(Country, Landscape..) %>%
summarize(avg_meals = mean(number_meals, na.rm=T),
Percent_Shortage_Past_Year = mean(shortage_year, na.rm=T)*100,
Mean_Months_Insecurity = mean(months_insecurity, na.rm=T),
Mean_CSI = mean(CSI, na.rm=T),
Mean_Diet_Diversity = mean(diversity, na.rm=T),
Mean_Nonfood_Spending = mean(Nonfood.Spending, na.rm=T),
Mean_Food_Consumption_Value = mean(Food.Consumption.Value, na.rm=T),
Mean_Food_Spending = mean(Food.Spending, na.rm=T),
Food_As_Percent_Total_Spending = mean(Food_As_Percent_Total_Spending, na.rm=T))
#########################################
#Write
#################################
library(aws.s3)
aws.signature::use_credentials()
writeS3 <- function(df, name){
names(df) <- gsub('.', '_', names(df), fixed=T)
names(df)[names(df)=='Landscape__'] <- 'Landscape'
zz <- rawConnection(raw(0), "r+")
write.csv(df, zz, row.names=F)
aws.s3::put_object(file = rawConnectionValue(zz),
bucket = "vs-cdb-indicators", object = name)
close(zz)
}
write.csv(out, 'D://Documents and Settings/mcooper/Desktop/FoodSecurity_HH.csv', row.names=F)
